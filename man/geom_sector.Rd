% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/3.ggplot.R
\docType{data}
\name{GeomSectorPanel}
\alias{GeomSectorPanel}
\alias{GeomSectorIndividual}
\alias{geom_sector}
\title{ggplot sector}
\usage{
geom_sector(
  mapping = NULL,
  data = NULL,
  stat = "identity",
  position = "identity",
  ...,
  na.rm = FALSE,
  show.legend = NA,
  inherit.aes = TRUE,
  individual = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{\link[ggplot2:aes]{aes()}} or
\code{\link[ggplot2:aes_]{aes_()}}. If specified and \code{inherit.aes = TRUE} (the
default), it is combined with the default mapping at the top level of the
plot. You must supply \code{mapping} if there is no plot mapping.}

\item{data}{The data to be displayed in this layer. There are three
options:

If \code{NULL}, the default, the data is inherited from the plot
data as specified in the call to \code{\link[ggplot2:ggplot]{ggplot()}}.

A \code{data.frame}, or other object, will override the plot
data. All objects will be fortified to produce a data frame. See
\code{\link[ggplot2:fortify]{fortify()}} for which variables will be created.

A \code{function} will be called with a single argument,
the plot data. The return value must be a \code{data.frame}, and
will be used as the layer data. A \code{function} can be created
from a \code{formula} (e.g. \code{~ head(.x, 10)}).}

\item{stat}{The statistical transformation to use on the data for this
layer, as a string.}

\item{position}{Position adjustment, either as a string, or the result of
a call to a position adjustment function.}

\item{...}{Other arguments passed on to \code{\link[ggplot2:layer]{layer()}}. These are
often aesthetics, used to set an aesthetic to a fixed value, like
\code{colour = "red"} or \code{size = 3}. They may also be parameters
to the paired geom/stat.}

\item{na.rm}{If \code{FALSE}, the default, missing values are removed with
a warning. If \code{TRUE}, missing values are silently removed.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.
\code{FALSE} never includes, and \code{TRUE} always includes.
It can also be a named logical vector to finely select the aesthetics to
display.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics,
rather than combining with them. This is most useful for helper functions
that define both data and aesthetics and shouldn't inherit behaviour from
the default plot specification, e.g. \code{\link[ggplot2:borders]{borders()}}.}

\item{individual}{Logical, default is FALSE.
When "individual=FALSE", draw very quickly with a vector form,
when "individual=TRUE", draw individually at a slower speed.
Vector form cannot control the deformation of the sector, you need to add coord_fixed()}

\item{verbose}{Logical, default is TRUE. Whether to display reminder information.}
}
\value{
ggplot object
}
\description{
Draw sector with ggplot2.
}
\details{
When "individual=FALSE", draw very quickly with a vector form,
when "individual=TRUE", draw individually at a slower speed.

The required parameters in mapping are "x", "y", "theta", and
the additional modifiable parameters are "r", "start", "r_start", "type", "colour", "fill".

When r = 0.5, the sector just fills the square.

For details, please check the \code{\link[=grid.sector]{grid.sector()}}.

For more details, please type \code{vignette("ggsector")}.
}
\examples{
\donttest{
library(magrittr)
# prepare data
set.seed(1)
t0 <- cor(mtcars) \%>\%
    set_colnames(paste("y_", colnames(.))) \%>\%
    set_rownames(paste("x_", rownames(.)))
t1 <- t0 \%>\%
    reshape2::melt()
t1$group <- sample(letters[1:5], nrow(t1), TRUE)
t1$r <- sample(c(0.24, 0.48), nrow(t1), TRUE)
t1$start <- runif(nrow(t1), max = 50)
t1$r_start <- sample(c(0, 0.08, 0.16), nrow(t1), TRUE)
t1$v <- abs(t1$value)
head(t1)
# plot with type of "percent"
ggplot(t1) +
    aes(x = Var1, y = Var2, theta = v * 100) +
    geom_sector(
        aes(fill = group, r = r, start = start, r_start = r_start),
        color = "transparent"
    ) +
    theme_bw()
# plot with type of "degree" and coord_fixed()
ggplot(t1) +
    aes(x = Var1, y = Var2, theta = v * 360) +
    geom_sector(
        aes(fill = group, r = r, start = start * 3.6, r_start = r_start),
        color = "transparent",
        type = "degree"
    ) +
    coord_fixed() +
    theme_bw()

# draw individually
ggplot(t1) +
    aes(x = Var1, y = Var2, theta = v * 100, r_start = r_start) +
    geom_sector(
        aes(fill = group, r = r, start = start),
        color = "transparent",
        individual = TRUE
    ) +
    theme_bw()
}
}
\keyword{datasets}
